{"name": "test_CredKart_Registration_003", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff614cffea5+79173]\n\tGetHandleVerifier [0x0x7ff614cfff00+79264]\n\t(No symbol) [0x0x7ff614ab9e5a]\n\t(No symbol) [0x0x7ff614b10586]\n\t(No symbol) [0x0x7ff614b1083c]\n\t(No symbol) [0x0x7ff614b64247]\n\t(No symbol) [0x0x7ff614b389af]\n\t(No symbol) [0x0x7ff614b6100d]\n\t(No symbol) [0x0x7ff614b38743]\n\t(No symbol) [0x0x7ff614b014c1]\n\t(No symbol) [0x0x7ff614b02253]\n\tGetHandleVerifier [0x0x7ff614fca2dd+3004797]\n\tGetHandleVerifier [0x0x7ff614fc472d+2981325]\n\tGetHandleVerifier [0x0x7ff614fe3380+3107360]\n\tGetHandleVerifier [0x0x7ff614d1aa2e+188622]\n\tGetHandleVerifier [0x0x7ff614d222bf+219487]\n\tGetHandleVerifier [0x0x7ff614d08df4+115860]\n\tGetHandleVerifier [0x0x7ff614d08fa9+116297]\n\tGetHandleVerifier [0x0x7ff614cef558+11256]\n\tBaseThreadInitThunk [0x0x7ffaa9997374+20]\n\tRtlUserThreadStart [0x0x7ffaa9b3cc91+33]", "trace": "self = <testCases.test_Credkart_User_Profile_001.Test_User_Profile_Class object at 0x0000023E4CDB28B0>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"CredKart login\")\n    @allure.story(\"story: CredKart Login\")\n    @allure.description(\"This test case is to validate Credkart Registration functionality\")\n    @allure.issue(\"issue : https://credence.in/\")\n    @allure.link(\"https://credence.in/\")\n    @allure.testcase(\"https://credence.in/\")\n    @allure.epic(\"Epic : CredKart\")\n    @allure.sub_suite(\"CredKart Login\")\n    @allure.title(\"test_CredKart_Registration_003\")\n    @pytest.mark.dependency(depends=[\"test_CredKart_Title_001\"])\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @pytest.mark.smoke\n    @pytest.mark.sanity\n    @pytest.mark.web\n    def test_CredKart_Registration_003(self):\n        self.driver.get(self.register_url)\n        self.rp = Registration_Page_Class(self.driver)  # Object Creation\n        name = Faker().name()\n        email = Faker().email()\n        print(f\"Name: {name}, Email: {email}\")\n        # Field - Name\n>       self.rp.Enter_Name(name)\n\ntestCases\\test_Credkart_User_Profile_001.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\Registration_Page.py:13: in Enter_Name\n    self.wait.until(expected_conditions.presence_of_element_located((By.ID, self.text_name_id)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"759ad2414c1a34f4937cadd22d0a91e5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000023E4D23F100>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff614cffea5+79173]\nE       \tGetHandleVerifier [0x0x7ff614cfff00+79264]\nE       \t(No symbol) [0x0x7ff614ab9e5a]\nE       \t(No symbol) [0x0x7ff614b10586]\nE       \t(No symbol) [0x0x7ff614b1083c]\nE       \t(No symbol) [0x0x7ff614b64247]\nE       \t(No symbol) [0x0x7ff614b389af]\nE       \t(No symbol) [0x0x7ff614b6100d]\nE       \t(No symbol) [0x0x7ff614b38743]\nE       \t(No symbol) [0x0x7ff614b014c1]\nE       \t(No symbol) [0x0x7ff614b02253]\nE       \tGetHandleVerifier [0x0x7ff614fca2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff614fc472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff614fe3380+3107360]\nE       \tGetHandleVerifier [0x0x7ff614d1aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff614d222bf+219487]\nE       \tGetHandleVerifier [0x0x7ff614d08df4+115860]\nE       \tGetHandleVerifier [0x0x7ff614d08fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff614cef558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffaa9997374+20]\nE       \tRtlUserThreadStart [0x0x7ffaa9b3cc91+33]\n\nC:\\Users\\my\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "This test case is to validate Credkart Registration functionality", "attachments": [{"name": "log", "source": "20eca780-aeab-4ebb-98d3-d8c7d736b779-attachment.txt", "type": "text/plain"}], "start": 1750247924493, "stop": 1750247930022, "uuid": "82bdfdcc-2d8d-4a36-815f-b135cf987060", "historyId": "977d8b22a5be87ad3f3452689163a401", "testCaseId": "977d8b22a5be87ad3f3452689163a401", "fullName": "testCases.test_Credkart_User_Profile_001.Test_User_Profile_Class#test_CredKart_Registration_003", "labels": [{"name": "story", "value": "story: CredKart Login"}, {"name": "feature", "value": "CredKart login"}, {"name": "subSuite", "value": "CredKart Login"}, {"name": "epic", "value": "Epic : CredKart"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "web"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_Credkart_User_Profile_001"}, {"name": "host", "value": "DESKTOP-RIKP0QT"}, {"name": "thread", "value": "8960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_Credkart_User_Profile_001"}], "links": [{"type": "tms", "url": "https://credence.in/", "name": "https://credence.in/"}, {"type": "link", "url": "https://credence.in/", "name": "https://credence.in/"}, {"type": "issue", "url": "issue : https://credence.in/", "name": "issue : https://credence.in/"}]}